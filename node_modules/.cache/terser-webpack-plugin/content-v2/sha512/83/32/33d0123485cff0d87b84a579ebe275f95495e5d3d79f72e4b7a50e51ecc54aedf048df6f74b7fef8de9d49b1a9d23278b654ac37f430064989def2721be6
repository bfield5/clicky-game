{"map":"{\"version\":3,\"sources\":[\"/Users/Admin/Desktop/code/react-prractice/clicky-game/src/components/FriendCard/FriendsCard.js\",\"/Users/Admin/Desktop/code/react-prractice/clicky-game/src/components/Wrapper/Wrapper.js\",\"/Users/Admin/Desktop/code/react-prractice/clicky-game/src/components/GameMessage/GameMessage.js\",\"/Users/Admin/Desktop/code/react-prractice/clicky-game/src/components/Header/Header.js\",\"/Users/Admin/Desktop/code/react-prractice/clicky-game/src/components/Footer/Footer.js\",\"/Users/Admin/Desktop/code/react-prractice/clicky-game/src/components/Game/Game.js\",\"/Users/Admin/Desktop/code/react-prractice/clicky-game/src/App.js\",\"/Users/Admin/Desktop/code/react-prractice/clicky-game/src/index.js\"],\"names\":[\"FriendCard\",\"props\",\"react_default\",\"a\",\"createElement\",\"role\",\"aria-label\",\"className\",\"style\",\"backgroundImage\",\"concat\",\"image\",\"value\",\"id\",\"onClick\",\"handleClick\",\"Wrapper\",\"children\",\"GameMessage\",\"state\",\"animating\",\"message\",\"renderMessage\",\"_this\",\"addAnimation\",\"prevProps\",\"newState\",\"score\",\"topScore\",\"this\",\"setState\",\"_this2\",\"onAnimationEnd\",\"Component\",\"Header\",\"components_GameMessage_GameMessage\",\"Footer\",\"Game\",\"friends\",\"shuffleDeck\",\"sort\",\"b\",\"Math\",\"random\",\"resetDeck\",\"resetFriends\",\"map\",\"friend\",\"Object\",\"objectSpread\",\"clicked\",\"correctGuess\",\"newFriends\",\"newScore\",\"newTopScore\",\"max\",\"wrongGuess\",\"gameCardClick\",\"guessedCorrectly\",\"components_Header_Header\",\"components_Wrapper_Wrapper\",\"FriendsCard\",\"key\",\"components_Footer_Footer\",\"App\",\"components_Game_Game\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"// import React from \\\"react\\\";\\n// import \\\"./FriendCard.css\\\";\\n\\n// const FriendCard = props => (\\n//   <div className=\\\"friendCard img-container\\\">\\n  \\n//      <div className=\\\"img-container\\\">\\n//       <img alt={props.name} src={props.image} />\\n//     </div> \\n    \\n     \\n  \\n//     <span className=\\\"remove\\\" onClick={() => props.deleteFriend(props.id)}></span>\\n//   </div>\\n// );\\n\\n// export default FriendCard;\\n\\n\\nimport React from \\\"react\\\";\\nimport \\\"./FriendCard.css\\\";\\n\\nconst FriendCard = props => (\\n    <div\\n        role=\\\"img\\\"\\n        aria-label=\\\"click item\\\" \\n        className=\\\"friendCard\\\"\\n        style={{ backgroundImage: `url(\\\"${props.image}\\\")` }}\\n        value={props.id}\\n        onClick={() => props.handleClick(props.id)}\\n    /> \\n);\\n\\nexport default FriendCard;\",\"import React from \\\"react\\\";\\nimport \\\"./Wrapper.css\\\";\\n\\nconst Wrapper = props => <main className=\\\"wrapper\\\">{props.children}</main>;\\n\\nexport default Wrapper;\\n\",\"import React, {Component} from \\\"react\\\";\\nimport \\\"./GameMessage.css\\\";\\n\\nclass GameMessage extends Component {\\n\\n    state = {\\n        animating: false,\\n        message: \\\"\\\"\\n    }\\n\\n    // function runs on every state change\\n    componentDidUpdate(prevProps) {\\n\\n      // will be passed into setState function\\n      let newState = {\\n        animating: true\\n      }\\n\\n      // deconstruct score and topScore from the pervious state\\n      const {score, topScore} = prevProps\\n\\n      // change message if user guess correclty or incorrectly\\n      if (score === 0 && topScore === 0) {\\n        newState.message = \\\"\\\";\\n      } else if (score !== 0 && topScore > 0) {\\n        newState.message = \\\"correct\\\";\\n      } else {\\n        newState.message = \\\"incorrect\\\";\\n      }\\n\\n      // set the state with the new message if the score changes, \\n      // or the message and state message are not equal\\n      if (score !== this.props.score || this.state.message !== newState.message) {\\n        this.setState(newState);\\n      }\\n  \\n    }\\n\\n    // change the display message based on the message state\\n    renderMessage = () => {\\n        switch (this.state.message) {\\n        case \\\"correct\\\":\\n          return \\\"You guessed correctly!\\\";\\n        case \\\"incorrect\\\":\\n          return \\\"You guessed incorrectly!\\\";\\n        default:\\n          return \\\"Click a character to begin!\\\";\\n        }\\n    };\\n\\n    // add animation class when animateClass state updates\\n    // animations from aniamte.css library\\n    // https://daneden.github.io/animate.css/\\n    addAnimation = () => {\\n      switch (this.state.message) {\\n        case \\\"correct\\\":\\n          return \\\"animated flash\\\";\\n        case \\\"incorrect\\\":\\n          return \\\"animated flip\\\";\\n        default:\\n          return \\\"\\\";\\n        }     \\n    }\\n\\n    \\n\\n    render() {\\n        return(\\n          <li \\n            // if the state.aniamtion = true, add the class from animate.css to trigger the animation,\\n            // also add the state.message as a class, which changes the color,\\n            // if aniamtion.state = false, remove the aniamte.css class and add the '.black' class\\n            className={` \\n              gameMessage \\n              ${this.state.animating? this.addAnimation(): \\\"\\\"}  \\n              ${this.state.animating? this.state.message: \\\"black\\\"}\\n            `}\\n            id={`${this.state.message}`}\\n            // set the animation state back to false after the classes are added\\n            onAnimationEnd={() => this.setState({ animating: false })} \\n          >\\n            {this.renderMessage()}\\n          </li>  \\n        );\\n    }\\n}\\n\\nexport default GameMessage;\\n\",\"import React from \\\"react\\\";\\nimport \\\"./Header.css\\\";\\nimport GameMessage from \\\"../GameMessage\\\";\\n\\nconst Header = props => (\\n    <div className=\\\"header\\\">\\n        <ul>\\n            <li><h2 className=\\\" title animated rubberBand\\\">Clicky Game</h2></li>\\n            <GameMessage score={props.score} topScore={props.topScore} />\\n            <li id=\\\"score\\\">Score: {props.score} | Top Score: {props.topScore}</li>\\n        </ul>\\n        \\n    </div>\\n)\\n\\nexport default Header;\\n\",\"import React from \\\"react\\\";\\nimport \\\"./Footer.css\\\";\\n\\nconst Footer = () => (\\n    <footer className=\\\"footer\\\">\\n        <div className=\\\"bottom\\\">\\n            <ul id='footer-list'>\\n                \\n                \\n            </ul>\\n        </div>\\n    </footer>\\n)\\n\\nexport default Footer;\",\"import React, { Component } from \\\"react\\\";\\nimport FriendCard from \\\"../FriendCard\\\";\\nimport Wrapper from \\\"../Wrapper\\\";\\nimport Header from \\\"../Header\\\";\\nimport Footer from \\\"../Footer\\\";\\nimport friends from \\\"../../data\\\";\\n\\n\\nclass Game extends Component {\\n  state = {\\n    friends: friends,\\n    score: 0,\\n    topScore: 0\\n  }\\n\\n// function gets called when the page loads\\ncomponentDidMount() {\\n  // reorders the friends array on state changes\\n  this.setState({ friends: this.shuffleDeck(this.state.friends) });\\n}\\n\\n // shuffle the imported friends array in random order\\n shuffleDeck = friends => {\\n  let newFriends = friends.sort(function(a, b){return 0.5 - Math.random()});\\n  return newFriends;\\n};\\n\\n// resets all the clicked properties to false\\nresetDeck = friends => {\\n  const resetFriends = friends.map(friend => ({ ...friend, clicked: false }));\\n  // console.log(friends);\\n  // console.log(resetFriends);\\n  return this.shuffleDeck(resetFriends);\\n};\\n\\n// checks to see if score is higher than the topscore then updates the state with the update array\\ncorrectGuess = newFriends => {\\n  let newScore = this.state.score;\\n  newScore++\\n  // fix would be this.state.score\\n  let newTopScore = Math.max(newScore, this.state.topScore);\\n\\n  this.setState({\\n      friends: this.shuffleDeck(newFriends),\\n      score: newScore,\\n      topScore: newTopScore,\\n      \\n  })\\n}\\n\\n// restarts the game with fresh data\\nwrongGuess = newFriends => {\\n  this.setState({\\n    friends: this.resetDeck(newFriends),\\n      score: 0\\n  })\\n}\\n\\n// when a card is clicked, check if it has been clicked before,\\n// then update that cards clicked property\\ngameCardClick = id => {\\n  let guessedCorrectly = false;\\n  // newFriends will be the friends array with updated clicked properties\\n  const newFriends= this.state.friends.map(friend => {\\n    if (friend.id === id) {\\n      if (!friend.clicked) {\\n        friend.clicked = true;\\n        guessedCorrectly = true;\\n      }\\n    }\\n    return friend;     \\n  });\\n  // if guessedCorrectly = true, run the correctGuess function,\\n  // else run the wrongGuess function\\n  guessedCorrectly ? this.correctGuess(newFriends) : this.wrongGuess(newFriends);\\n};\\n\\n\\n  \\n  render() {\\n    return (\\n      <div>\\n        <Header score={this.state.score} topScore = {this.state.topScore} />\\n          <Wrapper>\\n            <h1></h1>\\n            {this.state.friends.map(friend => \\n              <FriendCard\\n              key={friend.id}\\n              id={friend.id}\\n              image={friend.image}\\n              clicked={friend.clicked}\\n              handleClick={this.gameCardClick}\\n            />\\n              )}\\n            \\n          </Wrapper>\\n          <Footer />\\n        </div>\\n      );\\n    }\\n    \\n    \\n}\\n\\n\\n\\n\\nexport default Game;\\n\",\"import React from \\\"react\\\";\\nimport Game from \\\"./components/Game\\\"\\n\\n\\nconst App = () => <Game/>;\\n\\n\\n\\n\\n\\nexport default App;\\n\",\"// import React from 'react';\\n// import ReactDOM from 'react-dom';\\n// import './index.css';\\n// import App from './App';\\n// import * as serviceWorker from './serviceWorker';\\n// import 'bootstrap/dist/css/bootstrap.min.css';\\n\\n// ReactDOM.render(<App />, document.getElementById('root'));\\n\\n// // If you want your app to work offline and load faster, you can change\\n// // unregister() to register() below. Note this comes with some pitfalls.\\n// // Learn more about service workers: http://bit.ly/CRA-PWA\\n// serviceWorker.unregister();\\n\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\n// import * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\n// serviceWorker.register()\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,function(e){e.exports=[{id:1,image:\"assets/images/BeachTown-Left.jpg\",clicked:\"false\"},{id:2,image:\"assets/images/BeachTown-Right.jpg\",clicked:\"false\"},{id:3,image:\"assets/images/BestInTheWest-Left.jpg\",clicked:\"false\"},{id:4,image:\"assets/images/BestInTheWest-Right.jpg\",clicked:\"false\"},{id:5,image:\"assets/images/FunnyFarmFamily-Left.jpg\",clicked:\"false\"},{id:6,image:\"assets/images/FunnyFarmFamily-Right.jpg\",clicked:\"false\"},{id:7,image:\"assets/images/Singing Children-Left.jpg\",clicked:\"false\"},{id:8,image:\"assets/images/Singing Children-Right.jpg\",clicked:\"false\"},{id:9,image:\"assets/images/TrickOrTreat-Left.jpg\",clicked:\"false\"},{id:10,image:\"assets/images/TrickOrTreat-Right.jpg\",clicked:\"false\"},{id:11,image:\"assets/images/UniqueHomes-Left.jpg\",clicked:\"false\"},{id:12,image:\"assets/images/UniqueHomes-Right.jpg\",clicked:\"false\"}]},,function(e,t,a){e.exports=a(28)},,,,,function(e,t,a){},,function(e,t,a){},,function(e,t,a){},,function(e,t,a){},,function(e,t,a){},,function(e,t,a){},,function(e,t,a){\"use strict\";a.r(t);var n=a(0),i=a.n(n),s=a(8),c=a.n(s),r=(a(16),a(10)),o=a(1),l=a(2),u=a(4),m=a(3),d=a(5),g=(a(18),function(e){return i.a.createElement(\"div\",{role:\"img\",\"aria-label\":\"click item\",className:\"friendCard\",style:{backgroundImage:'url(\"'.concat(e.image,'\")')},value:e.id,onClick:function(){return e.handleClick(e.id)}})}),f=(a(20),function(e){return i.a.createElement(\"main\",{className:\"wrapper\"},e.children)}),h=(a(22),a(24),function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),s=0;s<n;s++)i[s]=arguments[s];return(a=Object(u.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(i)))).state={animating:!1,message:\"\"},a.renderMessage=function(){switch(a.state.message){case\"correct\":return\"You guessed correctly!\";case\"incorrect\":return\"You guessed incorrectly!\";default:return\"Click a character to begin!\"}},a.addAnimation=function(){switch(a.state.message){case\"correct\":return\"animated flash\";case\"incorrect\":return\"animated flip\";default:return\"\"}},a}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"componentDidUpdate\",value:function(e){var t={animating:!0},a=e.score,n=e.topScore;t.message=0===a&&0===n?\"\":0!==a&&n>0?\"correct\":\"incorrect\",a===this.props.score&&this.state.message===t.message||this.setState(t)}},{key:\"render\",value:function(){var e=this;return i.a.createElement(\"li\",{className:\" \\n              gameMessage \\n              \".concat(this.state.animating?this.addAnimation():\"\",\"  \\n              \").concat(this.state.animating?this.state.message:\"black\",\"\\n            \"),id:\"\".concat(this.state.message),onAnimationEnd:function(){return e.setState({animating:!1})}},this.renderMessage())}}]),t}(n.Component)),p=function(e){return i.a.createElement(\"div\",{className:\"header\"},i.a.createElement(\"ul\",null,i.a.createElement(\"li\",null,i.a.createElement(\"h2\",{className:\" title animated rubberBand\"},\"Clicky Game\")),i.a.createElement(h,{score:e.score,topScore:e.topScore}),i.a.createElement(\"li\",{id:\"score\"},\"Score: \",e.score,\" | Top Score: \",e.topScore)))},k=(a(26),function(){return i.a.createElement(\"footer\",{className:\"footer\"},i.a.createElement(\"div\",{className:\"bottom\"},i.a.createElement(\"ul\",{id:\"footer-list\"})))}),j=a(9),E=function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,i=new Array(n),s=0;s<n;s++)i[s]=arguments[s];return(a=Object(u.a)(this,(e=Object(m.a)(t)).call.apply(e,[this].concat(i)))).state={friends:j,score:0,topScore:0},a.shuffleDeck=function(e){return e.sort(function(e,t){return.5-Math.random()})},a.resetDeck=function(e){var t=e.map(function(e){return Object(r.a)({},e,{clicked:!1})});return a.shuffleDeck(t)},a.correctGuess=function(e){var t=a.state.score;t++;var n=Math.max(t,a.state.topScore);a.setState({friends:a.shuffleDeck(e),score:t,topScore:n})},a.wrongGuess=function(e){a.setState({friends:a.resetDeck(e),score:0})},a.gameCardClick=function(e){var t=!1,n=a.state.friends.map(function(a){return a.id===e&&(a.clicked||(a.clicked=!0,t=!0)),a});t?a.correctGuess(n):a.wrongGuess(n)},a}return Object(d.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){this.setState({friends:this.shuffleDeck(this.state.friends)})}},{key:\"render\",value:function(){var e=this;return i.a.createElement(\"div\",null,i.a.createElement(p,{score:this.state.score,topScore:this.state.topScore}),i.a.createElement(f,null,i.a.createElement(\"h1\",null),this.state.friends.map(function(t){return i.a.createElement(g,{key:t.id,id:t.id,image:t.image,clicked:t.clicked,handleClick:e.gameCardClick})})),i.a.createElement(k,null))}}]),t}(n.Component),v=function(){return i.a.createElement(E,null)};c.a.render(i.a.createElement(v,null),document.getElementById(\"root\"))}],[[11,2,1]]]);","extractedComments":[]}